module.exports = {
    name: 'react',
    description: '–ó–∞–ø—É—Å–∫–∞–µ—Ç –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ. (30 —Å–µ–∫)',
    execute(message, args) {
      message.reply('`' + message.content.substring(6, message.content.length - 1) + '`')
       .then(() => message.react('üëç').then(() => message.react('üëé')));

      const filter = (reaction, user) => {
        return ['üëç', 'üëé'].includes(reaction.emoji.name) && user.id === message.author.id;
      };

      message.awaitReactions(filter, { max: 1, time: 30000, errors: ['time'] })
        .then(collected => {
          const reaction = collected.first();

          if (reaction.emoji.name === 'üëç') {
            message.reply('–Ω–∞ —Ç–≤–æ—ë –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–∞–ª—å—Ü—ã —Å—Ç–æ—è—Ç –≤–≤–µ—Ä—Ö');
          }
          else {
            message.reply('–Ω–∞ —Ç–≤–æ—ë –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–∞–ª—å—Ü—ã –≤–∏—Å—è—Ç –≤–Ω–∏–∑');
          }
        })
        .catch(collected => {
          console.log(`–ß–µ—Ä–µ–∑ 30 —Å–µ–∫ —Ç–æ–ª—å–∫–æ ${collected.size} –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏.`);
          message.reply('–Ω–∞ —Ç–≤–æ—ë –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–∞–ª—å—Ü—ã —Å—Ç–æ—è—Ç –Ω–∏ –≤–≤–µ—Ä—Ö, –Ω–∏ –≤–Ω–∏–∑');
        });
    }
};
